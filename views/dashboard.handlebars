<div class="container">
    <div class="row mt-4">
        <div class="col-md-2 col-sm-2">
            <a class="btn btn-dark" href="/logout">Sign out</a>
        </div>
        <div class="col-md-2 col-sm-2">
            <a class="btn btn-light" href="/form">Edit my info</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="resume-container">
                <h1>My Resume</h1>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Resume Name</th>
                            <th>Format</th>
                            <th>Download</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr id="form-row">
                            <form id="resume-form">
                                <td colspan="3">
                                    <input value="My First Resume" id="resume-name" type="text" />
                                </td>
                                <td><button type="submit" class="btn btn-success">Create New</button>
                                </td>
                            </form>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    </d>
    <!-- Custom Script -->
    <script type="text/javascript">
        $(document).ready(function () {
            var nameInput = $("#resume-name");
            var resumeList = $("tbody");
            var container = $(".resume-container");

            $.urlParam = function (name) {
                var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
                return results[1] || 0;
            }
            // Adding event listeners to the form to create a new object, and the button to delete
            $(document).on("submit", "#resume-form", handleResumeFormSubmit);
            $(document).on("click", ".delete-author", handleDeleteButtonPress);

            // Getting the initial list of Resume Names
            getVersion();

            // A function to handle what happens when the form is submitted to create a new Author
            function handleResumeFormSubmit(event) {
                event.preventDefault();
                // Don't do anything if the name fields hasn't been filled out
                if (!nameInput.val().trim().trim()) {
                    return;
                }
                // Calling the upsertAuthor function and passing in the value of the name input
                upsertAuthor({
                    resumeName: nameInput
                        .val()
                        .trim()
                });
                console.log(nameInput);
            }

            // A function for creating an author. Calls getVersion upon completion
            function upsertAuthor(data) {
                $.post("/api/version", data)
                    .then(getVersion);
            }

            // Function for creating a new list row for authors
            function createResumeRow(data) {
                var newTr = $("<tr>");
                newTr.data("version", data);
                newTr.append("<td>" + data.resumeName + "</td>");
                newTr.append("<td><a href='/form?version_id=" + data.id + "'> Edit </a></td>");
                newTr.append("<td><a href=''>Download</a></td>");
                newTr.append("<td><a style='cursor:pointer;color:red' class='delete-author'>Delete Resume</a></td>");
                return newTr;
            }

            // Function for retrieving authors and getting them ready to be rendered to the page
            function getVersion() {
                $.get("/api/version", function (data) {
                    console.log("!!!!!" + JSON.stringify(data));
                    var rowsToAdd = [];
                    for (var i = 0; i < data.length; i++) {
                        rowsToAdd.push(createResumeRow(data[i]));
                    }
                    renderResumeList(rowsToAdd);
                    nameInput.val("");
                });
            }

            // A function for rendering the list of authors to the page
            function renderResumeList(rows) {
                resumeList.children().not(":last").remove();
                container.children(".alert").remove();
                if (rows.length) {
                    resumeList.prepend(rows);
                }
                else {
                    renderEmpty();
                }
            }

            // Function for handling what to render when there are no authors
            function renderEmpty() {
                var alertDiv = $("<div>");
                alertDiv.addClass("alert alert-warning");
                alertDiv.text("Start making your resume!");
                container.append(alertDiv);
            }

            // Function for handling what happens when the delete button is pressed
            function handleDeleteButtonPress() {
                var listItemData = $(this).parent("td").parent("tr").data("version");
                var id = listItemData.id;
                $.ajax({
                    method: "DELETE",
                    url: "/api/version/" + id
                })
                    .then(getVersion);
            }
        });</script>